/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fostw.dsfinance.bank.ui.console;

import com.fostw.dsfinance.bank.common.interfaces.IBank;
import com.fostw.dsfinance.bank.common.interfaces.IDepot;
import com.fostw.dsfinance.bank.common.interfaces.IUser;
import com.fostw.dsfinance.bank.common.models.Share;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.froihofer.dsfinance.bank.client.BankClient;

/**
 *
 * @author A4938
 */
public class ConsoleUI {    
    
    private IBank bank = null;
    
    public ConsoleUI(IBank bank){
        this.bank=bank;
    }
    
    public IBank getBank() {
        return bank;
    }

    public void setBank(IBank bank) {
        this.bank = bank;
    }
    
    public void show(){
        //TODO: create menu depending on user type
        Menu menu = new Menu();
        menu.setTitel("Bank Client Main Menu");
        menu.insert("Search Stock");
        menu.insert("Buy Stock");
        menu.insert("Sell Stock");
        if(bank.checkEmployee()){
            menu.insert("Search Customer");
            menu.insert("Create Customer");
            menu.insert("Show Bank Volume");
        }
        menu.insert("Exit");
        int option;
        while((option=menu.show())!=menu.getEntries().size()){
            if(option==1){
                String name="";
                name = new TextBox("Share name").show();
                List<Share> shares = new ArrayList<>();
                try {
                     shares = this.bank.searchShare(name);
                } catch (Exception ex) {
                    Logger.getLogger(ConsoleUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                for(Share share : shares){
                    System.out.println(share.toString());
                }
            }else if(option==2){
                System.out.println("Buy Stock");
                String firstname = new TextBox("Firstname").show();
                String lastname = new TextBox("Lastname").show();
                List<IUser> customers = null;
                try {
                    customers=this.bank.searchCustomer(firstname, lastname);
                } catch (Exception ex) {
                    Logger.getLogger(ConsoleUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                List<Object> users = new ArrayList<>();
                for(IUser customer : customers){
                    users.add((Object)customer);
                }
                
                SelectionMenu userSelection = new SelectionMenu();
                userSelection.setOptions(users);
                IUser user = (IUser)userSelection.show();
                System.out.println(user.toString());
                
                String searchText = new TextBox("Search Share").show();
                List<Share> shareList = new ArrayList<>();
                try {
                    shareList = this.bank.searchShare(searchText);
                } catch (Exception ex) {
                    Logger.getLogger(ConsoleUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                SelectionMenu shareMenu = new SelectionMenu();
                for(Share s : shareList){
                    shareMenu.addOption(s);
                }
                Share share = (Share)shareMenu.show();
                
                String cnt = new TextBox("Count", TextBoxInputType.NUMBER).show();
                int shareCount = Integer.parseInt(cnt);
                
                try {
                    this.bank.buyShares(user.getId(),share.getSymbol(),shareCount);
                } catch (Exception ex) {
                    Logger.getLogger(ConsoleUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                BigDecimal bankMoney = this.bank.getSpielgeld();
                System.out.println("Bank Money: " + bankMoney.toString());
            }else if(option==5){
                System.out.println("New Customer:");
                //String s = new TextBox("ID", TextBoxInputType.NUMBER).show();
                String username = new TextBox("Username").show();
                String firstname = new TextBox("Firstname").show();
                String lastname = new TextBox("Lastname").show();
                String address = new TextBox("Lastname").show();
                IUser user=null;
                try {
                    user = bank.searchCustomer(username);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(BankClient.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(user==null){
                    try {
                        this.bank.newCustomer(username, firstname, lastname, address);
                    } catch (Exception ex) {
                        Logger.getLogger(ConsoleUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        
    }
    
    /*
    private void searchStockMenu(){
        
    }*/
    
}
